name: Test Positive
on:
  pull_request: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: echo "Do setup"

  create-release:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: create-release
        run: |
          release_name="${PREFIX}$(git rev-parse --short HEAD)"
          gh release create ${release_name} --prerelease --target ${{ github.sha }} --notes "Created by ${{ github.workflow }} (will be automatically deleted)."
          echo "name=${release_name}" > $GITHUB_OUTPUT
          echo "tag=$(gh release view ${release_name} --json tagName -q '.tagName')" >> $GITHUB_OUTPUT
        env:
          # Below is the main difference between this workflow's negative counterpart.
          # The action _will_ pick up a comment because the provided 'include_regex' will be able to match it.
          PREFIX: "v0.0.0-test.include."
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      name: ${{ steps.create-release.outputs.name }}
      tag: ${{ steps.create-release.outputs.tag }}

  assert:
    runs-on: ubuntu-latest
    needs: [create-release]
    timeout-minutes: 5 # Timeout for test release workflow to run
    outputs:
      comment_id: ${{ steps.fc.outputs.comment-id }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./
        with:
          tag: ${{ needs.create-release.outputs.tag }}
          include_regex: 'v0\.0\.0-test\.include\..*' # Should find a comment

      - name: Find Comment (should fail)
        uses: peter-evans/find-comment@v3
        id: fc
        continue-on-error: true
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "${{ needs.create-release.outputs.name}}"

      # Empty strings evaluate to zero in GitHub Actions expressions.
      - name: Succeed if comment was found
        if: ${{ always() && steps.fc.outputs.comment-id != 0}}
        run: |
          exit 0

      - name: Fail if comment was not found
        if: ${{ always() && steps.fc.outputs.comment-id == 0 }}
        run: |
          exit 1

  teardown:
    runs-on: ubuntu-latest
    needs: [create-release, assert]
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Delete Test Release + Tag
        if: needs.create-release.result == 'success'
        run: gh release delete ${{ needs.create-release.outputs.name }} --cleanup-tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: octokit/request-action@v2.x
        name: Delete Test Release Comment
        if: ${{ always() && needs.assert.outputs.comment_id != 0 }}
        with:
          route: DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.pull_request.base.repo.name }}
          comment_id: ${{ needs.assert.outputs.comment_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
